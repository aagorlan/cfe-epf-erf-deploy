#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ПараметрЗапуска) Тогда
		Если Лев(ПараметрЗапуска, 5) <> "PATH=" Тогда
			ВызватьИсключение "Неверный параметр запуска: " + ПараметрЗапуска;
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		ПутьКПапкеРасширений = Сред(ПараметрЗапуска, 6);
		Сообщить("Для загрузки используется путь " + ПутьКПапкеРасширений);
		ПодключитьОбработчикОжидания("ОбновитьСостояниеПриОткрытии", 2, Истина);
		ЗакрыватьПослеОбработки = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСостояние(Команда)
	//Получим список доступных расширений
	НачатьПоискФайлов(Новый ОписаниеОповещения("ОбработатьНайденныеФайлы", ЭтотОбъект), ПутьКПапкеРасширений,
		"Configuration.xml", Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСостояниеНаСервере(МассивРасширений)
	УстановитьПривилегированныйРежим(Истина);
	Если БезопасныйРежим() <> Ложь Тогда
		УстановитьБезопасныйРежим(Ложь);
	КонецЕсли;
	Для Каждого Расширение Из РасширенияКонфигурации.Получить() Цикл
		Сообщить("Обработка расширения конфигурации " + Расширение.Имя);
		Если МассивРасширений.Найти(Расширение.Имя) <> Неопределено Тогда
			Сообщить("Расширение найдено в каталоге, активировано");
			Расширение.Активно = Истина;
			Расширение.Записать();
		Иначе
			Если Не Расширение.Активно Тогда
				Сообщить("Расширение не найдено в каталоге и не активно, удалено");
				Расширение.Удалить();
			Иначе
				Сообщить("Расширение не найдено в каталоге и активно, деактивировано");
				Расширение.Активно = Ложь;
				Расширение.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	УстановитьБезопасныйРежим(Истина);
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНайденныеФайлы(РезультатПоиска, ДопПараметры) Экспорт
	Если РезультатПоиска.Количество() > 0 Тогда
		МассивРасширений = Новый Массив;
		Для Каждого Файл Из РезультатПоиска Цикл
			Сообщить("Найдено расширение " + Файл.Путь);
			Чтение = Новый ЧтениеXML;
			Чтение.ОткрытьФайл(Файл.ПолноеИмя);
			
			Тип = ФабрикаXDTO.Тип("http://v8.1c.ru/8.3/MDClasses", "MetaDataObject");
			Расширение = ФабрикаXDTO.ПрочитатьXML(Чтение, Тип);
			МассивРасширений.Добавить(Расширение.Configuration.Properties.Name);
			Сообщить("Определено имя расширения " + Расширение.Configuration.Properties.Name);
		КонецЦикла;
		ОбновитьСостояниеНаСервере(МассивРасширений);
		Если ЗакрыватьПослеОбработки Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
	Иначе
		Если ЗакрыватьПослеОбработки Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеПриОткрытии()
	ОбновитьСостояние(Неопределено);
КонецПроцедуры

#КонецОбласти
